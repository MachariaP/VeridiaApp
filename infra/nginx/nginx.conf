events {
    worker_connections 1024;
}

http {
    upstream user_service {
        server user_service:8000;
    }
    upstream content_service {
        server content_service:8001;
    }

    server {
        listen 80;
        server_name localhost;

        # Rate Limiting (100 req/min per IP)
        limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/m;

        location /api/v1/users/ {
            limit_req zone=api_limit burst=20 nodelay;
            proxy_pass http://user_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            auth_request /auth-validate;
        }

        location /api/v1/content/ {
            limit_req zone=api_limit burst=20 nodelay;
            proxy_pass http://content_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            auth_request /auth-validate;
        }

        # JWT Validation Endpoint (proxy to Keycloak or internal service)
        location /auth-validate {
            internal;
            proxy_pass http://keycloak:8080/realms/ugc_platform_realm/protocol/openid-connect/token/introspect;
            proxy_set_header Authorization "Basic ${KEYCLOAK_CLIENT_CREDENTIALS}";
            proxy_pass_request_body off;
        }

        # Static Assets (e.g., from S3 via CloudFront in prod)
        location /static/ {
            proxy_pass https://your-s3-bucket.s3.amazonaws.com;
        }
    }
}
